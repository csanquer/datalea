<?php

namespace CSanquer\FakeryGenerator\Test\Helper;

use CSanquer\FakeryGenerator\Helper\Converter;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-05 at 10:26:47.
 */
class ConverterTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::getAvailableConvertMethods
     */
    public function testGetAvailableConvertMethods()
    {
        $this->assertEquals([
            'lowercase',
            'uppercase',
            'capitalize',
            'capitalize_words',
            'absolute',
            'as_bool',
            'as_int',
            'as_float',
            'as_string',
            'remove_accents',
            'remove_accents_lowercase',
            'remove_accents_uppercase',
            'remove_accents_capitalize',
            'remove_accents_capitalize_words',
        ], Converter::getAvailableConvertMethods());
    }

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::tolower
     */
    public function testTolower()
    {
        $this->assertEquals('mélodie', Converter::tolower('MÉlODie'));
    }

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::toupper
     */
    public function testToupper()
    {
        $this->assertEquals('MÉLODIE', Converter::toupper('méLoDie'));
    }

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::ucwords
     */
    public function testUcwords()
    {
        $this->assertEquals('Mélodie À Chanter', Converter::ucwords('mÉLodIE à chAnter'));
    }

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::ucfirst
     */
    public function testUcfirst()
    {
        $this->assertEquals('MÉLodIE', Converter::ucfirst('mÉLodIE'));
        $this->assertEquals('À', Converter::ucfirst('à'));
    }

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::removeAccents
     */
    public function testRemoveAccents()
    {
        $this->assertEquals('eEAaioucoe', Converter::removeAccents('èÉÀàîoùçœ'));
    }

    /**
     * @covers CSanquer\FakeryGenerator\Helper\Converter::convert
     * @dataProvider providerConvert
     */
    public function testConvert($method, $value, $expected)
    {
        $this->assertSame($expected, Converter::convert($method, $value));
    }
    
    public function providerConvert()
    {
        /**
        'lowercase',
        'uppercase',
        'capitalize',
        'capitalize_words',
        'absolute',
        'as_bool',
        'as_int',
        'as_float',
        'as_string',
        'remove_accents',
        'remove_accents_lowercase',
        'remove_accents_uppercase',
        'remove_accents_capitalize',
        'remove_accents_capitalize_words',
        /**/
        return [
            ['', 'MÉLodie', 'MÉLodie'],
            ['lowercase', 'MÉLodie', 'mélodie'],
            ['uppercase', 'MÉLodie', 'MÉLODIE'],
            ['capitalize', 'mÉLodie', 'MÉLodie'],
            ['capitalize_words', 'mÉLodIE à chAnter', 'Mélodie À Chanter'],
            ['absolute', '-5', 5],
            ['as_bool', '0', false],
            ['as_int', '0.56', 0],
            ['as_float', '0.56', 0.56],
            ['as_string', 0.56, '0.56'],
            ['remove_accents', 'MÉLodie', 'MELodie'],
            ['remove_accents_lowercase', 'MÉLodie', 'melodie'],
            ['remove_accents_uppercase', 'MÉLodie', 'MELODIE'],
            ['remove_accents_capitalize', 'mÉLodie', 'MELodie'],
            ['remove_accents_capitalize_words', 'mÉLodIE à chAnter', 'Melodie A Chanter'],
        ];
    }
}
