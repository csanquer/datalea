<?php

namespace CSanquer\FakeryGenerator\Test\Model;

use CSanquer\FakeryGenerator\Model\Config;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-05 at 12:29:44.
 */
class ConfigTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Config
     */
    protected $config;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->config = new Config();
    }

    public function testConstruct()
    {
        $this->assertInternalType('int', $this->config->getSeed());
        $this->assertEmpty($this->config->getFormats());
        $this->assertEmpty($this->config->getVariables());
        $this->assertEmpty($this->config->getColumns());
        $this->assertInstanceOf('\\CSanquer\\ColibriCsv\\Dialect', $this->config->getCsvDialect());
    }
    
    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getLocale
     * @covers CSanquer\FakeryGenerator\Model\Config::setLocale
     */
    public function testGetSetLocale()
    {
        $this->assertNull($this->config->getLocale());
        $this->assertInstanceOf('\\CSanquer\\FakeryGenerator\\Model\\Config', $this->config->setLocale('fr_FR'));
        $this->assertEquals('fr_FR', $this->config->getLocale());
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::setSeed
     * @covers CSanquer\FakeryGenerator\Model\Config::getSeed
     * @covers CSanquer\FakeryGenerator\Model\Config::generateSeed
     */
    public function testHasGetSetGenerateSeed()
    {
        $this->assertInstanceOf('\\CSanquer\\FakeryGenerator\\Model\\Config', $this->config->generateSeed());
        $this->assertInternalType('int', $this->config->getSeed());
        $this->assertInstanceOf('\\CSanquer\\FakeryGenerator\\Model\\Config', $this->config->setSeed('2354'));
        $this->assertSame(2354, $this->config->getSeed());
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getClassName
     * @covers CSanquer\FakeryGenerator\Model\Config::setClassName
     * @covers CSanquer\FakeryGenerator\Model\Config::getClassNameLastPart
     */
    public function testGetSetClassName()
    {
        $this->assertNull($this->config->getClassName());
        $this->assertInstanceOf('\\CSanquer\\FakeryGenerator\\Model\\Config', $this->config->setClassName('Entity\\User-'));
        $this->assertEquals('Entity\\User', $this->config->getClassName());
        $this->assertEquals('Entity_User', $this->config->getClassName(true));
        $this->assertEquals('User', $this->config->getClassNameLastPart());
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::addFormat
     * @todo   Implement testAddFormat().
     */
    public function testAddFormat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::removeFormat
     * @todo   Implement testRemoveFormat().
     */
    public function testRemoveFormat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::hasFormat
     * @todo   Implement testHasFormat().
     */
    public function testHasFormat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getFormats
     * @todo   Implement testGetFormats().
     */
    public function testGetFormats()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::setFormats
     * @todo   Implement testSetFormats().
     */
    public function testSetFormats()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getFakeNumber
     * @covers CSanquer\FakeryGenerator\Model\Config::setFakeNumber
     */
    public function testGetSetFakeNumber()
    {
        $this->assertInstanceOf('\\CSanquer\\FakeryGenerator\\Model\\Config', $this->config->setFakeNumber('100'));
        $this->assertSame(100, $this->config->getFakeNumber());
    }
    
    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getCsvDialect
     * @covers CSanquer\FakeryGenerator\Model\Config::setCsvDialect
     */
    public function testGetSetsvDialect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::createCsvWriter
     * @todo   Implement testCreateCsvWriter().
     */
    public function testCreateCsvWriter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getColumn
     * @todo   Implement testGetColumn().
     */
    public function testGetColumn()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getColumns
     * @todo   Implement testGetColumns().
     */
    public function testGetColumns()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::setColumns
     * @todo   Implement testSetColumns().
     */
    public function testSetColumns()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::addColumn
     * @todo   Implement testAddColumn().
     */
    public function testAddColumn()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::removeColumn
     * @todo   Implement testRemoveColumn().
     */
    public function testRemoveColumn()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getVariables
     * @todo   Implement testGetVariables().
     */
    public function testGetVariables()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::getVariable
     * @todo   Implement testGetVariable().
     */
    public function testGetVariable()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::setVariables
     * @todo   Implement testSetVariables().
     */
    public function testSetVariables()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::addVariable
     * @todo   Implement testAddVariable().
     */
    public function testAddVariable()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::removeVariable
     * @todo   Implement testRemoveVariable().
     */
    public function testRemoveVariable()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CSanquer\FakeryGenerator\Model\Config::generateColumns
     * @todo   Implement testGenerateColumns().
     */
    public function testGenerateColumns()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

}
